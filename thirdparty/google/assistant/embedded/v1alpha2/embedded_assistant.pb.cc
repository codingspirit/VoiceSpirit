// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/assistant/embedded/v1alpha2/embedded_assistant.proto

#include "google/assistant/embedded/v1alpha2/embedded_assistant.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AudioInConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AudioOut;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AudioOutConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DebugConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DebugInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceAction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DialogStateOut;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ScreenOut;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ScreenOutConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SpeechRecognitionResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DeviceLocation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DialogStateIn;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_AssistConfig;
}  // namespace protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto
namespace protobuf_google_2ftype_2flatlng_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2ftype_2flatlng_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LatLng;
}  // namespace protobuf_google_2ftype_2flatlng_2eproto
namespace google {
namespace assistant {
namespace embedded {
namespace v1alpha2 {
class AssistRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssistRequest>
      _instance;
  const ::google::assistant::embedded::v1alpha2::AssistConfig* config_;
  ::google::protobuf::internal::ArenaStringPtr audio_in_;
} _AssistRequest_default_instance_;
class AssistResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssistResponse>
      _instance;
} _AssistResponse_default_instance_;
class DebugInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebugInfo>
      _instance;
} _DebugInfo_default_instance_;
class AssistConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssistConfig>
      _instance;
  const ::google::assistant::embedded::v1alpha2::AudioInConfig* audio_in_config_;
  ::google::protobuf::internal::ArenaStringPtr text_query_;
} _AssistConfig_default_instance_;
class AudioInConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AudioInConfig>
      _instance;
} _AudioInConfig_default_instance_;
class AudioOutConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AudioOutConfig>
      _instance;
} _AudioOutConfig_default_instance_;
class ScreenOutConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScreenOutConfig>
      _instance;
} _ScreenOutConfig_default_instance_;
class DialogStateInDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DialogStateIn>
      _instance;
} _DialogStateIn_default_instance_;
class DeviceConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceConfig>
      _instance;
} _DeviceConfig_default_instance_;
class AudioOutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AudioOut>
      _instance;
} _AudioOut_default_instance_;
class ScreenOutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScreenOut>
      _instance;
} _ScreenOut_default_instance_;
class DeviceActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceAction>
      _instance;
} _DeviceAction_default_instance_;
class SpeechRecognitionResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SpeechRecognitionResult>
      _instance;
} _SpeechRecognitionResult_default_instance_;
class DialogStateOutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DialogStateOut>
      _instance;
} _DialogStateOut_default_instance_;
class DebugConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebugConfig>
      _instance;
} _DebugConfig_default_instance_;
class DeviceLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceLocation>
      _instance;
  const ::google::type::LatLng* coordinates_;
} _DeviceLocation_default_instance_;
}  // namespace v1alpha2
}  // namespace embedded
}  // namespace assistant
}  // namespace google
namespace protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto {
static void InitDefaultsAssistRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_AssistRequest_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::AssistRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::AssistRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AssistRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAssistRequest}, {
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AssistConfig.base,}};

static void InitDefaultsAssistResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_AssistResponse_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::AssistResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::AssistResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_AssistResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsAssistResponse}, {
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AudioOut.base,
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_ScreenOut.base,
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DeviceAction.base,
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_SpeechRecognitionResult.base,
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DialogStateOut.base,
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DebugInfo.base,}};

static void InitDefaultsDebugInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_DebugInfo_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::DebugInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::DebugInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DebugInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDebugInfo}, {}};

static void InitDefaultsAssistConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_AssistConfig_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::AssistConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::AssistConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_AssistConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsAssistConfig}, {
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AudioInConfig.base,
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AudioOutConfig.base,
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_ScreenOutConfig.base,
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DialogStateIn.base,
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DeviceConfig.base,
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DebugConfig.base,}};

static void InitDefaultsAudioInConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_AudioInConfig_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::AudioInConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::AudioInConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AudioInConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAudioInConfig}, {}};

static void InitDefaultsAudioOutConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_AudioOutConfig_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::AudioOutConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::AudioOutConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AudioOutConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAudioOutConfig}, {}};

static void InitDefaultsScreenOutConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_ScreenOutConfig_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::ScreenOutConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::ScreenOutConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScreenOutConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScreenOutConfig}, {}};

static void InitDefaultsDialogStateIn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_DialogStateIn_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::DialogStateIn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::DialogStateIn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DialogStateIn =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDialogStateIn}, {
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DeviceLocation.base,}};

static void InitDefaultsDeviceConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_DeviceConfig_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::DeviceConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::DeviceConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceConfig}, {}};

static void InitDefaultsAudioOut() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_AudioOut_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::AudioOut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::AudioOut::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AudioOut =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAudioOut}, {}};

static void InitDefaultsScreenOut() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_ScreenOut_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::ScreenOut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::ScreenOut::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScreenOut =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScreenOut}, {}};

static void InitDefaultsDeviceAction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_DeviceAction_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::DeviceAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::DeviceAction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceAction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceAction}, {}};

static void InitDefaultsSpeechRecognitionResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_SpeechRecognitionResult_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::SpeechRecognitionResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::SpeechRecognitionResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SpeechRecognitionResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSpeechRecognitionResult}, {}};

static void InitDefaultsDialogStateOut() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_DialogStateOut_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::DialogStateOut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::DialogStateOut::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DialogStateOut =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDialogStateOut}, {}};

static void InitDefaultsDebugConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_DebugConfig_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::DebugConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::DebugConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DebugConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDebugConfig}, {}};

static void InitDefaultsDeviceLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::assistant::embedded::v1alpha2::_DeviceLocation_default_instance_;
    new (ptr) ::google::assistant::embedded::v1alpha2::DeviceLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::assistant::embedded::v1alpha2::DeviceLocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeviceLocation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeviceLocation}, {
      &protobuf_google_2ftype_2flatlng_2eproto::scc_info_LatLng.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AssistRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssistResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DebugInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssistConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AudioInConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AudioOutConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScreenOutConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DialogStateIn.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AudioOut.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScreenOut.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceAction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SpeechRecognitionResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DialogStateOut.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DebugConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceLocation.base);
}

::google::protobuf::Metadata file_level_metadata[16];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::assistant::embedded::v1alpha2::AssistRequestDefaultTypeInternal, config_),
  offsetof(::google::assistant::embedded::v1alpha2::AssistRequestDefaultTypeInternal, audio_in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistRequest, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistResponse, event_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistResponse, audio_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistResponse, screen_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistResponse, device_action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistResponse, speech_results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistResponse, dialog_state_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistResponse, debug_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DebugInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DebugInfo, aog_agent_to_assistant_json_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistConfig, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::assistant::embedded::v1alpha2::AssistConfigDefaultTypeInternal, audio_in_config_),
  offsetof(::google::assistant::embedded::v1alpha2::AssistConfigDefaultTypeInternal, text_query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistConfig, audio_out_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistConfig, screen_out_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistConfig, dialog_state_in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistConfig, device_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistConfig, debug_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AssistConfig, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AudioInConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AudioInConfig, encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AudioInConfig, sample_rate_hertz_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AudioOutConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AudioOutConfig, encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AudioOutConfig, sample_rate_hertz_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AudioOutConfig, volume_percentage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::ScreenOutConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::ScreenOutConfig, screen_mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DialogStateIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DialogStateIn, conversation_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DialogStateIn, language_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DialogStateIn, device_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DialogStateIn, is_new_conversation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DeviceConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DeviceConfig, device_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DeviceConfig, device_model_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AudioOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::AudioOut, audio_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::ScreenOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::ScreenOut, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::ScreenOut, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DeviceAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DeviceAction, device_request_json_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::SpeechRecognitionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::SpeechRecognitionResult, transcript_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::SpeechRecognitionResult, stability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DialogStateOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DialogStateOut, supplemental_display_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DialogStateOut, conversation_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DialogStateOut, microphone_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DialogStateOut, volume_percentage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DebugConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DebugConfig, return_debug_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DeviceLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DeviceLocation, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::assistant::embedded::v1alpha2::DeviceLocationDefaultTypeInternal, coordinates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::assistant::embedded::v1alpha2::DeviceLocation, type_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::assistant::embedded::v1alpha2::AssistRequest)},
  { 8, -1, sizeof(::google::assistant::embedded::v1alpha2::AssistResponse)},
  { 20, -1, sizeof(::google::assistant::embedded::v1alpha2::DebugInfo)},
  { 26, -1, sizeof(::google::assistant::embedded::v1alpha2::AssistConfig)},
  { 39, -1, sizeof(::google::assistant::embedded::v1alpha2::AudioInConfig)},
  { 46, -1, sizeof(::google::assistant::embedded::v1alpha2::AudioOutConfig)},
  { 54, -1, sizeof(::google::assistant::embedded::v1alpha2::ScreenOutConfig)},
  { 60, -1, sizeof(::google::assistant::embedded::v1alpha2::DialogStateIn)},
  { 69, -1, sizeof(::google::assistant::embedded::v1alpha2::DeviceConfig)},
  { 76, -1, sizeof(::google::assistant::embedded::v1alpha2::AudioOut)},
  { 82, -1, sizeof(::google::assistant::embedded::v1alpha2::ScreenOut)},
  { 89, -1, sizeof(::google::assistant::embedded::v1alpha2::DeviceAction)},
  { 95, -1, sizeof(::google::assistant::embedded::v1alpha2::SpeechRecognitionResult)},
  { 102, -1, sizeof(::google::assistant::embedded::v1alpha2::DialogStateOut)},
  { 111, -1, sizeof(::google::assistant::embedded::v1alpha2::DebugConfig)},
  { 117, -1, sizeof(::google::assistant::embedded::v1alpha2::DeviceLocation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_AssistRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_AssistResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_DebugInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_AssistConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_AudioInConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_AudioOutConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_ScreenOutConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_DialogStateIn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_DeviceConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_AudioOut_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_ScreenOut_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_DeviceAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_SpeechRecognitionResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_DialogStateOut_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_DebugConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::assistant::embedded::v1alpha2::_DeviceLocation_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/assistant/embedded/v1alpha2/embedded_assistant.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n;google/assistant/embedded/v1alpha2/emb"
      "edded_assistant.proto\022\"google.assistant."
      "embedded.v1alpha2\032\034google/api/annotation"
      "s.proto\032\030google/type/latlng.proto\"o\n\rAss"
      "istRequest\022B\n\006config\030\001 \001(\01320.google.assi"
      "stant.embedded.v1alpha2.AssistConfigH\000\022\022"
      "\n\010audio_in\030\002 \001(\014H\000B\006\n\004type\"\324\004\n\016AssistRes"
      "ponse\022P\n\nevent_type\030\001 \001(\0162<.google.assis"
      "tant.embedded.v1alpha2.AssistResponse.Ev"
      "entType\022\?\n\taudio_out\030\003 \001(\0132,.google.assi"
      "stant.embedded.v1alpha2.AudioOut\022A\n\nscre"
      "en_out\030\004 \001(\0132-.google.assistant.embedded"
      ".v1alpha2.ScreenOut\022G\n\rdevice_action\030\006 \001"
      "(\01320.google.assistant.embedded.v1alpha2."
      "DeviceAction\022S\n\016speech_results\030\002 \003(\0132;.g"
      "oogle.assistant.embedded.v1alpha2.Speech"
      "RecognitionResult\022L\n\020dialog_state_out\030\005 "
      "\001(\01322.google.assistant.embedded.v1alpha2"
      ".DialogStateOut\022A\n\ndebug_info\030\010 \001(\0132-.go"
      "ogle.assistant.embedded.v1alpha2.DebugIn"
      "fo\"=\n\tEventType\022\032\n\026EVENT_TYPE_UNSPECIFIE"
      "D\020\000\022\024\n\020END_OF_UTTERANCE\020\001\"0\n\tDebugInfo\022#"
      "\n\033aog_agent_to_assistant_json\030\001 \001(\t\"\364\003\n\014"
      "AssistConfig\022L\n\017audio_in_config\030\001 \001(\01321."
      "google.assistant.embedded.v1alpha2.Audio"
      "InConfigH\000\022\024\n\ntext_query\030\006 \001(\tH\000\022L\n\020audi"
      "o_out_config\030\002 \001(\01322.google.assistant.em"
      "bedded.v1alpha2.AudioOutConfig\022N\n\021screen"
      "_out_config\030\010 \001(\01323.google.assistant.emb"
      "edded.v1alpha2.ScreenOutConfig\022J\n\017dialog"
      "_state_in\030\003 \001(\01321.google.assistant.embed"
      "ded.v1alpha2.DialogStateIn\022G\n\rdevice_con"
      "fig\030\004 \001(\01320.google.assistant.embedded.v1"
      "alpha2.DeviceConfig\022E\n\014debug_config\030\005 \001("
      "\0132/.google.assistant.embedded.v1alpha2.D"
      "ebugConfigB\006\n\004type\"\266\001\n\rAudioInConfig\022L\n\010"
      "encoding\030\001 \001(\0162:.google.assistant.embedd"
      "ed.v1alpha2.AudioInConfig.Encoding\022\031\n\021sa"
      "mple_rate_hertz\030\002 \001(\005\"<\n\010Encoding\022\030\n\024ENC"
      "ODING_UNSPECIFIED\020\000\022\014\n\010LINEAR16\020\001\022\010\n\004FLA"
      "C\020\002\"\343\001\n\016AudioOutConfig\022M\n\010encoding\030\001 \001(\016"
      "2;.google.assistant.embedded.v1alpha2.Au"
      "dioOutConfig.Encoding\022\031\n\021sample_rate_her"
      "tz\030\002 \001(\005\022\031\n\021volume_percentage\030\003 \001(\005\"L\n\010E"
      "ncoding\022\030\n\024ENCODING_UNSPECIFIED\020\000\022\014\n\010LIN"
      "EAR16\020\001\022\007\n\003MP3\020\002\022\017\n\013OPUS_IN_OGG\020\003\"\247\001\n\017Sc"
      "reenOutConfig\022S\n\013screen_mode\030\001 \001(\0162>.goo"
      "gle.assistant.embedded.v1alpha2.ScreenOu"
      "tConfig.ScreenMode\"\?\n\nScreenMode\022\033\n\027SCRE"
      "EN_MODE_UNSPECIFIED\020\000\022\007\n\003OFF\020\001\022\013\n\007PLAYIN"
      "G\020\003\"\254\001\n\rDialogStateIn\022\032\n\022conversation_st"
      "ate\030\001 \001(\014\022\025\n\rlanguage_code\030\002 \001(\t\022K\n\017devi"
      "ce_location\030\005 \001(\01322.google.assistant.emb"
      "edded.v1alpha2.DeviceLocation\022\033\n\023is_new_"
      "conversation\030\007 \001(\010\":\n\014DeviceConfig\022\021\n\tde"
      "vice_id\030\001 \001(\t\022\027\n\017device_model_id\030\003 \001(\t\"\036"
      "\n\010AudioOut\022\022\n\naudio_data\030\001 \001(\014\"\213\001\n\tScree"
      "nOut\022D\n\006format\030\001 \001(\01624.google.assistant."
      "embedded.v1alpha2.ScreenOut.Format\022\014\n\004da"
      "ta\030\002 \001(\014\"*\n\006Format\022\026\n\022FORMAT_UNSPECIFIED"
      "\020\000\022\010\n\004HTML\020\001\"+\n\014DeviceAction\022\033\n\023device_r"
      "equest_json\030\001 \001(\t\"@\n\027SpeechRecognitionRe"
      "sult\022\022\n\ntranscript\030\001 \001(\t\022\021\n\tstability\030\002 "
      "\001(\002\"\245\002\n\016DialogStateOut\022!\n\031supplemental_d"
      "isplay_text\030\001 \001(\t\022\032\n\022conversation_state\030"
      "\002 \001(\014\022Z\n\017microphone_mode\030\003 \001(\0162A.google."
      "assistant.embedded.v1alpha2.DialogStateO"
      "ut.MicrophoneMode\022\031\n\021volume_percentage\030\004"
      " \001(\005\"]\n\016MicrophoneMode\022\037\n\033MICROPHONE_MOD"
      "E_UNSPECIFIED\020\000\022\024\n\020CLOSE_MICROPHONE\020\001\022\024\n"
      "\020DIALOG_FOLLOW_ON\020\002\"(\n\013DebugConfig\022\031\n\021re"
      "turn_debug_info\030\006 \001(\010\"D\n\016DeviceLocation\022"
      "*\n\013coordinates\030\001 \001(\0132\023.google.type.LatLn"
      "gH\000B\006\n\004type2\210\001\n\021EmbeddedAssistant\022s\n\006Ass"
      "ist\0221.google.assistant.embedded.v1alpha2"
      ".AssistRequest\0322.google.assistant.embedd"
      "ed.v1alpha2.AssistResponse(\0010\001B\217\001\n&com.g"
      "oogle.assistant.embedded.v1alpha2B\016Assis"
      "tantProtoP\001ZJgoogle.golang.org/genproto/"
      "googleapis/assistant/embedded/v1alpha2;e"
      "mbedded\242\002\006ASTSDKb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3224);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/assistant/embedded/v1alpha2/embedded_assistant.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2ftype_2flatlng_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto
namespace google {
namespace assistant {
namespace embedded {
namespace v1alpha2 {
const ::google::protobuf::EnumDescriptor* AssistResponse_EventType_descriptor() {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_enum_descriptors[0];
}
bool AssistResponse_EventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AssistResponse_EventType AssistResponse::EVENT_TYPE_UNSPECIFIED;
const AssistResponse_EventType AssistResponse::END_OF_UTTERANCE;
const AssistResponse_EventType AssistResponse::EventType_MIN;
const AssistResponse_EventType AssistResponse::EventType_MAX;
const int AssistResponse::EventType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AudioInConfig_Encoding_descriptor() {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_enum_descriptors[1];
}
bool AudioInConfig_Encoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AudioInConfig_Encoding AudioInConfig::ENCODING_UNSPECIFIED;
const AudioInConfig_Encoding AudioInConfig::LINEAR16;
const AudioInConfig_Encoding AudioInConfig::FLAC;
const AudioInConfig_Encoding AudioInConfig::Encoding_MIN;
const AudioInConfig_Encoding AudioInConfig::Encoding_MAX;
const int AudioInConfig::Encoding_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AudioOutConfig_Encoding_descriptor() {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_enum_descriptors[2];
}
bool AudioOutConfig_Encoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AudioOutConfig_Encoding AudioOutConfig::ENCODING_UNSPECIFIED;
const AudioOutConfig_Encoding AudioOutConfig::LINEAR16;
const AudioOutConfig_Encoding AudioOutConfig::MP3;
const AudioOutConfig_Encoding AudioOutConfig::OPUS_IN_OGG;
const AudioOutConfig_Encoding AudioOutConfig::Encoding_MIN;
const AudioOutConfig_Encoding AudioOutConfig::Encoding_MAX;
const int AudioOutConfig::Encoding_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ScreenOutConfig_ScreenMode_descriptor() {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_enum_descriptors[3];
}
bool ScreenOutConfig_ScreenMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ScreenOutConfig_ScreenMode ScreenOutConfig::SCREEN_MODE_UNSPECIFIED;
const ScreenOutConfig_ScreenMode ScreenOutConfig::OFF;
const ScreenOutConfig_ScreenMode ScreenOutConfig::PLAYING;
const ScreenOutConfig_ScreenMode ScreenOutConfig::ScreenMode_MIN;
const ScreenOutConfig_ScreenMode ScreenOutConfig::ScreenMode_MAX;
const int ScreenOutConfig::ScreenMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ScreenOut_Format_descriptor() {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_enum_descriptors[4];
}
bool ScreenOut_Format_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ScreenOut_Format ScreenOut::FORMAT_UNSPECIFIED;
const ScreenOut_Format ScreenOut::HTML;
const ScreenOut_Format ScreenOut::Format_MIN;
const ScreenOut_Format ScreenOut::Format_MAX;
const int ScreenOut::Format_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DialogStateOut_MicrophoneMode_descriptor() {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_enum_descriptors[5];
}
bool DialogStateOut_MicrophoneMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DialogStateOut_MicrophoneMode DialogStateOut::MICROPHONE_MODE_UNSPECIFIED;
const DialogStateOut_MicrophoneMode DialogStateOut::CLOSE_MICROPHONE;
const DialogStateOut_MicrophoneMode DialogStateOut::DIALOG_FOLLOW_ON;
const DialogStateOut_MicrophoneMode DialogStateOut::MicrophoneMode_MIN;
const DialogStateOut_MicrophoneMode DialogStateOut::MicrophoneMode_MAX;
const int DialogStateOut::MicrophoneMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void AssistRequest::InitAsDefaultInstance() {
  ::google::assistant::embedded::v1alpha2::_AssistRequest_default_instance_.config_ = const_cast< ::google::assistant::embedded::v1alpha2::AssistConfig*>(
      ::google::assistant::embedded::v1alpha2::AssistConfig::internal_default_instance());
  ::google::assistant::embedded::v1alpha2::_AssistRequest_default_instance_.audio_in_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AssistRequest::set_allocated_config(::google::assistant::embedded::v1alpha2::AssistConfig* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    set_has_config();
    type_.config_ = config;
  }
  // @@protoc_insertion_point(field_set_allocated:google.assistant.embedded.v1alpha2.AssistRequest.config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssistRequest::kConfigFieldNumber;
const int AssistRequest::kAudioInFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssistRequest::AssistRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AssistRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.AssistRequest)
}
AssistRequest::AssistRequest(const AssistRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kConfig: {
      mutable_config()->::google::assistant::embedded::v1alpha2::AssistConfig::MergeFrom(from.config());
      break;
    }
    case kAudioIn: {
      set_audio_in(from.audio_in());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.AssistRequest)
}

void AssistRequest::SharedCtor() {
  clear_has_type();
}

AssistRequest::~AssistRequest() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.AssistRequest)
  SharedDtor();
}

void AssistRequest::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void AssistRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AssistRequest::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssistRequest& AssistRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AssistRequest.base);
  return *internal_default_instance();
}


void AssistRequest::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:google.assistant.embedded.v1alpha2.AssistRequest)
  switch (type_case()) {
    case kConfig: {
      delete type_.config_;
      break;
    }
    case kAudioIn: {
      type_.audio_in_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void AssistRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.AssistRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

bool AssistRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.AssistRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.assistant.embedded.v1alpha2.AssistConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes audio_in = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_audio_in()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.AssistRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.AssistRequest)
  return false;
#undef DO_
}

void AssistRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.AssistRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.AssistConfig config = 1;
  if (has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_config(), output);
  }

  // bytes audio_in = 2;
  if (has_audio_in()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->audio_in(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.AssistRequest)
}

::google::protobuf::uint8* AssistRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.AssistRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.AssistConfig config = 1;
  if (has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_config(), deterministic, target);
  }

  // bytes audio_in = 2;
  if (has_audio_in()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->audio_in(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.AssistRequest)
  return target;
}

size_t AssistRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.AssistRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_case()) {
    // .google.assistant.embedded.v1alpha2.AssistConfig config = 1;
    case kConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.config_);
      break;
    }
    // bytes audio_in = 2;
    case kAudioIn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->audio_in());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssistRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.AssistRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AssistRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssistRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.AssistRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.AssistRequest)
    MergeFrom(*source);
  }
}

void AssistRequest::MergeFrom(const AssistRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.AssistRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kConfig: {
      mutable_config()->::google::assistant::embedded::v1alpha2::AssistConfig::MergeFrom(from.config());
      break;
    }
    case kAudioIn: {
      set_audio_in(from.audio_in());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void AssistRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.AssistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssistRequest::CopyFrom(const AssistRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.AssistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssistRequest::IsInitialized() const {
  return true;
}

void AssistRequest::Swap(AssistRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssistRequest::InternalSwap(AssistRequest* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AssistRequest::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AssistResponse::InitAsDefaultInstance() {
  ::google::assistant::embedded::v1alpha2::_AssistResponse_default_instance_._instance.get_mutable()->audio_out_ = const_cast< ::google::assistant::embedded::v1alpha2::AudioOut*>(
      ::google::assistant::embedded::v1alpha2::AudioOut::internal_default_instance());
  ::google::assistant::embedded::v1alpha2::_AssistResponse_default_instance_._instance.get_mutable()->screen_out_ = const_cast< ::google::assistant::embedded::v1alpha2::ScreenOut*>(
      ::google::assistant::embedded::v1alpha2::ScreenOut::internal_default_instance());
  ::google::assistant::embedded::v1alpha2::_AssistResponse_default_instance_._instance.get_mutable()->device_action_ = const_cast< ::google::assistant::embedded::v1alpha2::DeviceAction*>(
      ::google::assistant::embedded::v1alpha2::DeviceAction::internal_default_instance());
  ::google::assistant::embedded::v1alpha2::_AssistResponse_default_instance_._instance.get_mutable()->dialog_state_out_ = const_cast< ::google::assistant::embedded::v1alpha2::DialogStateOut*>(
      ::google::assistant::embedded::v1alpha2::DialogStateOut::internal_default_instance());
  ::google::assistant::embedded::v1alpha2::_AssistResponse_default_instance_._instance.get_mutable()->debug_info_ = const_cast< ::google::assistant::embedded::v1alpha2::DebugInfo*>(
      ::google::assistant::embedded::v1alpha2::DebugInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssistResponse::kEventTypeFieldNumber;
const int AssistResponse::kAudioOutFieldNumber;
const int AssistResponse::kScreenOutFieldNumber;
const int AssistResponse::kDeviceActionFieldNumber;
const int AssistResponse::kSpeechResultsFieldNumber;
const int AssistResponse::kDialogStateOutFieldNumber;
const int AssistResponse::kDebugInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssistResponse::AssistResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AssistResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.AssistResponse)
}
AssistResponse::AssistResponse(const AssistResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      speech_results_(from.speech_results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_audio_out()) {
    audio_out_ = new ::google::assistant::embedded::v1alpha2::AudioOut(*from.audio_out_);
  } else {
    audio_out_ = NULL;
  }
  if (from.has_screen_out()) {
    screen_out_ = new ::google::assistant::embedded::v1alpha2::ScreenOut(*from.screen_out_);
  } else {
    screen_out_ = NULL;
  }
  if (from.has_dialog_state_out()) {
    dialog_state_out_ = new ::google::assistant::embedded::v1alpha2::DialogStateOut(*from.dialog_state_out_);
  } else {
    dialog_state_out_ = NULL;
  }
  if (from.has_device_action()) {
    device_action_ = new ::google::assistant::embedded::v1alpha2::DeviceAction(*from.device_action_);
  } else {
    device_action_ = NULL;
  }
  if (from.has_debug_info()) {
    debug_info_ = new ::google::assistant::embedded::v1alpha2::DebugInfo(*from.debug_info_);
  } else {
    debug_info_ = NULL;
  }
  event_type_ = from.event_type_;
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.AssistResponse)
}

void AssistResponse::SharedCtor() {
  ::memset(&audio_out_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_type_) -
      reinterpret_cast<char*>(&audio_out_)) + sizeof(event_type_));
}

AssistResponse::~AssistResponse() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.AssistResponse)
  SharedDtor();
}

void AssistResponse::SharedDtor() {
  if (this != internal_default_instance()) delete audio_out_;
  if (this != internal_default_instance()) delete screen_out_;
  if (this != internal_default_instance()) delete dialog_state_out_;
  if (this != internal_default_instance()) delete device_action_;
  if (this != internal_default_instance()) delete debug_info_;
}

void AssistResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AssistResponse::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssistResponse& AssistResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AssistResponse.base);
  return *internal_default_instance();
}


void AssistResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.AssistResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  speech_results_.Clear();
  if (GetArenaNoVirtual() == NULL && audio_out_ != NULL) {
    delete audio_out_;
  }
  audio_out_ = NULL;
  if (GetArenaNoVirtual() == NULL && screen_out_ != NULL) {
    delete screen_out_;
  }
  screen_out_ = NULL;
  if (GetArenaNoVirtual() == NULL && dialog_state_out_ != NULL) {
    delete dialog_state_out_;
  }
  dialog_state_out_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_action_ != NULL) {
    delete device_action_;
  }
  device_action_ = NULL;
  if (GetArenaNoVirtual() == NULL && debug_info_ != NULL) {
    delete debug_info_;
  }
  debug_info_ = NULL;
  event_type_ = 0;
  _internal_metadata_.Clear();
}

bool AssistResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.AssistResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.assistant.embedded.v1alpha2.AssistResponse.EventType event_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_event_type(static_cast< ::google::assistant::embedded::v1alpha2::AssistResponse_EventType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.assistant.embedded.v1alpha2.SpeechRecognitionResult speech_results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_speech_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha2.AudioOut audio_out = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_audio_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha2.ScreenOut screen_out = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_screen_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha2.DialogStateOut dialog_state_out = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dialog_state_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha2.DeviceAction device_action = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_action()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha2.DebugInfo debug_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debug_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.AssistResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.AssistResponse)
  return false;
#undef DO_
}

void AssistResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.AssistResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.AssistResponse.EventType event_type = 1;
  if (this->event_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->event_type(), output);
  }

  // repeated .google.assistant.embedded.v1alpha2.SpeechRecognitionResult speech_results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speech_results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->speech_results(static_cast<int>(i)),
      output);
  }

  // .google.assistant.embedded.v1alpha2.AudioOut audio_out = 3;
  if (this->has_audio_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_audio_out(), output);
  }

  // .google.assistant.embedded.v1alpha2.ScreenOut screen_out = 4;
  if (this->has_screen_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_screen_out(), output);
  }

  // .google.assistant.embedded.v1alpha2.DialogStateOut dialog_state_out = 5;
  if (this->has_dialog_state_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_dialog_state_out(), output);
  }

  // .google.assistant.embedded.v1alpha2.DeviceAction device_action = 6;
  if (this->has_device_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_device_action(), output);
  }

  // .google.assistant.embedded.v1alpha2.DebugInfo debug_info = 8;
  if (this->has_debug_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_debug_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.AssistResponse)
}

::google::protobuf::uint8* AssistResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.AssistResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.AssistResponse.EventType event_type = 1;
  if (this->event_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->event_type(), target);
  }

  // repeated .google.assistant.embedded.v1alpha2.SpeechRecognitionResult speech_results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speech_results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->speech_results(static_cast<int>(i)), deterministic, target);
  }

  // .google.assistant.embedded.v1alpha2.AudioOut audio_out = 3;
  if (this->has_audio_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_audio_out(), deterministic, target);
  }

  // .google.assistant.embedded.v1alpha2.ScreenOut screen_out = 4;
  if (this->has_screen_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_screen_out(), deterministic, target);
  }

  // .google.assistant.embedded.v1alpha2.DialogStateOut dialog_state_out = 5;
  if (this->has_dialog_state_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_dialog_state_out(), deterministic, target);
  }

  // .google.assistant.embedded.v1alpha2.DeviceAction device_action = 6;
  if (this->has_device_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_device_action(), deterministic, target);
  }

  // .google.assistant.embedded.v1alpha2.DebugInfo debug_info = 8;
  if (this->has_debug_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_debug_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.AssistResponse)
  return target;
}

size_t AssistResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.AssistResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.assistant.embedded.v1alpha2.SpeechRecognitionResult speech_results = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->speech_results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->speech_results(static_cast<int>(i)));
    }
  }

  // .google.assistant.embedded.v1alpha2.AudioOut audio_out = 3;
  if (this->has_audio_out()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *audio_out_);
  }

  // .google.assistant.embedded.v1alpha2.ScreenOut screen_out = 4;
  if (this->has_screen_out()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *screen_out_);
  }

  // .google.assistant.embedded.v1alpha2.DialogStateOut dialog_state_out = 5;
  if (this->has_dialog_state_out()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dialog_state_out_);
  }

  // .google.assistant.embedded.v1alpha2.DeviceAction device_action = 6;
  if (this->has_device_action()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_action_);
  }

  // .google.assistant.embedded.v1alpha2.DebugInfo debug_info = 8;
  if (this->has_debug_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *debug_info_);
  }

  // .google.assistant.embedded.v1alpha2.AssistResponse.EventType event_type = 1;
  if (this->event_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssistResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.AssistResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AssistResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssistResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.AssistResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.AssistResponse)
    MergeFrom(*source);
  }
}

void AssistResponse::MergeFrom(const AssistResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.AssistResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  speech_results_.MergeFrom(from.speech_results_);
  if (from.has_audio_out()) {
    mutable_audio_out()->::google::assistant::embedded::v1alpha2::AudioOut::MergeFrom(from.audio_out());
  }
  if (from.has_screen_out()) {
    mutable_screen_out()->::google::assistant::embedded::v1alpha2::ScreenOut::MergeFrom(from.screen_out());
  }
  if (from.has_dialog_state_out()) {
    mutable_dialog_state_out()->::google::assistant::embedded::v1alpha2::DialogStateOut::MergeFrom(from.dialog_state_out());
  }
  if (from.has_device_action()) {
    mutable_device_action()->::google::assistant::embedded::v1alpha2::DeviceAction::MergeFrom(from.device_action());
  }
  if (from.has_debug_info()) {
    mutable_debug_info()->::google::assistant::embedded::v1alpha2::DebugInfo::MergeFrom(from.debug_info());
  }
  if (from.event_type() != 0) {
    set_event_type(from.event_type());
  }
}

void AssistResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.AssistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssistResponse::CopyFrom(const AssistResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.AssistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssistResponse::IsInitialized() const {
  return true;
}

void AssistResponse::Swap(AssistResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssistResponse::InternalSwap(AssistResponse* other) {
  using std::swap;
  CastToBase(&speech_results_)->InternalSwap(CastToBase(&other->speech_results_));
  swap(audio_out_, other->audio_out_);
  swap(screen_out_, other->screen_out_);
  swap(dialog_state_out_, other->dialog_state_out_);
  swap(device_action_, other->device_action_);
  swap(debug_info_, other->debug_info_);
  swap(event_type_, other->event_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AssistResponse::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DebugInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugInfo::kAogAgentToAssistantJsonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugInfo::DebugInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DebugInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.DebugInfo)
}
DebugInfo::DebugInfo(const DebugInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  aog_agent_to_assistant_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.aog_agent_to_assistant_json().size() > 0) {
    aog_agent_to_assistant_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aog_agent_to_assistant_json_);
  }
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.DebugInfo)
}

void DebugInfo::SharedCtor() {
  aog_agent_to_assistant_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DebugInfo::~DebugInfo() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.DebugInfo)
  SharedDtor();
}

void DebugInfo::SharedDtor() {
  aog_agent_to_assistant_json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DebugInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DebugInfo::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebugInfo& DebugInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DebugInfo.base);
  return *internal_default_instance();
}


void DebugInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.DebugInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aog_agent_to_assistant_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DebugInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.DebugInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string aog_agent_to_assistant_json = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aog_agent_to_assistant_json()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->aog_agent_to_assistant_json().data(), static_cast<int>(this->aog_agent_to_assistant_json().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.assistant.embedded.v1alpha2.DebugInfo.aog_agent_to_assistant_json"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.DebugInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.DebugInfo)
  return false;
#undef DO_
}

void DebugInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.DebugInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string aog_agent_to_assistant_json = 1;
  if (this->aog_agent_to_assistant_json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aog_agent_to_assistant_json().data(), static_cast<int>(this->aog_agent_to_assistant_json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.DebugInfo.aog_agent_to_assistant_json");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->aog_agent_to_assistant_json(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.DebugInfo)
}

::google::protobuf::uint8* DebugInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.DebugInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string aog_agent_to_assistant_json = 1;
  if (this->aog_agent_to_assistant_json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aog_agent_to_assistant_json().data(), static_cast<int>(this->aog_agent_to_assistant_json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.DebugInfo.aog_agent_to_assistant_json");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->aog_agent_to_assistant_json(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.DebugInfo)
  return target;
}

size_t DebugInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.DebugInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string aog_agent_to_assistant_json = 1;
  if (this->aog_agent_to_assistant_json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->aog_agent_to_assistant_json());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DebugInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.DebugInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.DebugInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.DebugInfo)
    MergeFrom(*source);
  }
}

void DebugInfo::MergeFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.DebugInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.aog_agent_to_assistant_json().size() > 0) {

    aog_agent_to_assistant_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aog_agent_to_assistant_json_);
  }
}

void DebugInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.DebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugInfo::CopyFrom(const DebugInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.DebugInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugInfo::IsInitialized() const {
  return true;
}

void DebugInfo::Swap(DebugInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugInfo::InternalSwap(DebugInfo* other) {
  using std::swap;
  aog_agent_to_assistant_json_.Swap(&other->aog_agent_to_assistant_json_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DebugInfo::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AssistConfig::InitAsDefaultInstance() {
  ::google::assistant::embedded::v1alpha2::_AssistConfig_default_instance_.audio_in_config_ = const_cast< ::google::assistant::embedded::v1alpha2::AudioInConfig*>(
      ::google::assistant::embedded::v1alpha2::AudioInConfig::internal_default_instance());
  ::google::assistant::embedded::v1alpha2::_AssistConfig_default_instance_.text_query_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::assistant::embedded::v1alpha2::_AssistConfig_default_instance_._instance.get_mutable()->audio_out_config_ = const_cast< ::google::assistant::embedded::v1alpha2::AudioOutConfig*>(
      ::google::assistant::embedded::v1alpha2::AudioOutConfig::internal_default_instance());
  ::google::assistant::embedded::v1alpha2::_AssistConfig_default_instance_._instance.get_mutable()->screen_out_config_ = const_cast< ::google::assistant::embedded::v1alpha2::ScreenOutConfig*>(
      ::google::assistant::embedded::v1alpha2::ScreenOutConfig::internal_default_instance());
  ::google::assistant::embedded::v1alpha2::_AssistConfig_default_instance_._instance.get_mutable()->dialog_state_in_ = const_cast< ::google::assistant::embedded::v1alpha2::DialogStateIn*>(
      ::google::assistant::embedded::v1alpha2::DialogStateIn::internal_default_instance());
  ::google::assistant::embedded::v1alpha2::_AssistConfig_default_instance_._instance.get_mutable()->device_config_ = const_cast< ::google::assistant::embedded::v1alpha2::DeviceConfig*>(
      ::google::assistant::embedded::v1alpha2::DeviceConfig::internal_default_instance());
  ::google::assistant::embedded::v1alpha2::_AssistConfig_default_instance_._instance.get_mutable()->debug_config_ = const_cast< ::google::assistant::embedded::v1alpha2::DebugConfig*>(
      ::google::assistant::embedded::v1alpha2::DebugConfig::internal_default_instance());
}
void AssistConfig::set_allocated_audio_in_config(::google::assistant::embedded::v1alpha2::AudioInConfig* audio_in_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (audio_in_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      audio_in_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, audio_in_config, submessage_arena);
    }
    set_has_audio_in_config();
    type_.audio_in_config_ = audio_in_config;
  }
  // @@protoc_insertion_point(field_set_allocated:google.assistant.embedded.v1alpha2.AssistConfig.audio_in_config)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssistConfig::kAudioInConfigFieldNumber;
const int AssistConfig::kTextQueryFieldNumber;
const int AssistConfig::kAudioOutConfigFieldNumber;
const int AssistConfig::kScreenOutConfigFieldNumber;
const int AssistConfig::kDialogStateInFieldNumber;
const int AssistConfig::kDeviceConfigFieldNumber;
const int AssistConfig::kDebugConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssistConfig::AssistConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AssistConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.AssistConfig)
}
AssistConfig::AssistConfig(const AssistConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_audio_out_config()) {
    audio_out_config_ = new ::google::assistant::embedded::v1alpha2::AudioOutConfig(*from.audio_out_config_);
  } else {
    audio_out_config_ = NULL;
  }
  if (from.has_dialog_state_in()) {
    dialog_state_in_ = new ::google::assistant::embedded::v1alpha2::DialogStateIn(*from.dialog_state_in_);
  } else {
    dialog_state_in_ = NULL;
  }
  if (from.has_device_config()) {
    device_config_ = new ::google::assistant::embedded::v1alpha2::DeviceConfig(*from.device_config_);
  } else {
    device_config_ = NULL;
  }
  if (from.has_debug_config()) {
    debug_config_ = new ::google::assistant::embedded::v1alpha2::DebugConfig(*from.debug_config_);
  } else {
    debug_config_ = NULL;
  }
  if (from.has_screen_out_config()) {
    screen_out_config_ = new ::google::assistant::embedded::v1alpha2::ScreenOutConfig(*from.screen_out_config_);
  } else {
    screen_out_config_ = NULL;
  }
  clear_has_type();
  switch (from.type_case()) {
    case kAudioInConfig: {
      mutable_audio_in_config()->::google::assistant::embedded::v1alpha2::AudioInConfig::MergeFrom(from.audio_in_config());
      break;
    }
    case kTextQuery: {
      set_text_query(from.text_query());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.AssistConfig)
}

void AssistConfig::SharedCtor() {
  ::memset(&audio_out_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&screen_out_config_) -
      reinterpret_cast<char*>(&audio_out_config_)) + sizeof(screen_out_config_));
  clear_has_type();
}

AssistConfig::~AssistConfig() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.AssistConfig)
  SharedDtor();
}

void AssistConfig::SharedDtor() {
  if (this != internal_default_instance()) delete audio_out_config_;
  if (this != internal_default_instance()) delete dialog_state_in_;
  if (this != internal_default_instance()) delete device_config_;
  if (this != internal_default_instance()) delete debug_config_;
  if (this != internal_default_instance()) delete screen_out_config_;
  if (has_type()) {
    clear_type();
  }
}

void AssistConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AssistConfig::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssistConfig& AssistConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AssistConfig.base);
  return *internal_default_instance();
}


void AssistConfig::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:google.assistant.embedded.v1alpha2.AssistConfig)
  switch (type_case()) {
    case kAudioInConfig: {
      delete type_.audio_in_config_;
      break;
    }
    case kTextQuery: {
      type_.text_query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void AssistConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.AssistConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && audio_out_config_ != NULL) {
    delete audio_out_config_;
  }
  audio_out_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && dialog_state_in_ != NULL) {
    delete dialog_state_in_;
  }
  dialog_state_in_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_config_ != NULL) {
    delete device_config_;
  }
  device_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && debug_config_ != NULL) {
    delete debug_config_;
  }
  debug_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && screen_out_config_ != NULL) {
    delete screen_out_config_;
  }
  screen_out_config_ = NULL;
  clear_type();
  _internal_metadata_.Clear();
}

bool AssistConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.AssistConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_audio_in_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_audio_out_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dialog_state_in()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debug_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text_query = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text_query().data(), static_cast<int>(this->text_query().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.assistant.embedded.v1alpha2.AssistConfig.text_query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_screen_out_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.AssistConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.AssistConfig)
  return false;
#undef DO_
}

void AssistConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.AssistConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;
  if (has_audio_in_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_audio_in_config(), output);
  }

  // .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;
  if (this->has_audio_out_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_audio_out_config(), output);
  }

  // .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;
  if (this->has_dialog_state_in()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_dialog_state_in(), output);
  }

  // .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;
  if (this->has_device_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_device_config(), output);
  }

  // .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;
  if (this->has_debug_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_debug_config(), output);
  }

  // string text_query = 6;
  if (has_text_query()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text_query().data(), static_cast<int>(this->text_query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.AssistConfig.text_query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->text_query(), output);
  }

  // .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;
  if (this->has_screen_out_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_screen_out_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.AssistConfig)
}

::google::protobuf::uint8* AssistConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.AssistConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;
  if (has_audio_in_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_audio_in_config(), deterministic, target);
  }

  // .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;
  if (this->has_audio_out_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_audio_out_config(), deterministic, target);
  }

  // .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;
  if (this->has_dialog_state_in()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_dialog_state_in(), deterministic, target);
  }

  // .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;
  if (this->has_device_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_device_config(), deterministic, target);
  }

  // .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;
  if (this->has_debug_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_debug_config(), deterministic, target);
  }

  // string text_query = 6;
  if (has_text_query()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text_query().data(), static_cast<int>(this->text_query().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.AssistConfig.text_query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->text_query(), target);
  }

  // .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;
  if (this->has_screen_out_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_screen_out_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.AssistConfig)
  return target;
}

size_t AssistConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.AssistConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.assistant.embedded.v1alpha2.AudioOutConfig audio_out_config = 2;
  if (this->has_audio_out_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *audio_out_config_);
  }

  // .google.assistant.embedded.v1alpha2.DialogStateIn dialog_state_in = 3;
  if (this->has_dialog_state_in()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dialog_state_in_);
  }

  // .google.assistant.embedded.v1alpha2.DeviceConfig device_config = 4;
  if (this->has_device_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_config_);
  }

  // .google.assistant.embedded.v1alpha2.DebugConfig debug_config = 5;
  if (this->has_debug_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *debug_config_);
  }

  // .google.assistant.embedded.v1alpha2.ScreenOutConfig screen_out_config = 8;
  if (this->has_screen_out_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *screen_out_config_);
  }

  switch (type_case()) {
    // .google.assistant.embedded.v1alpha2.AudioInConfig audio_in_config = 1;
    case kAudioInConfig: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.audio_in_config_);
      break;
    }
    // string text_query = 6;
    case kTextQuery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text_query());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssistConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.AssistConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AssistConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssistConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.AssistConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.AssistConfig)
    MergeFrom(*source);
  }
}

void AssistConfig::MergeFrom(const AssistConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.AssistConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_audio_out_config()) {
    mutable_audio_out_config()->::google::assistant::embedded::v1alpha2::AudioOutConfig::MergeFrom(from.audio_out_config());
  }
  if (from.has_dialog_state_in()) {
    mutable_dialog_state_in()->::google::assistant::embedded::v1alpha2::DialogStateIn::MergeFrom(from.dialog_state_in());
  }
  if (from.has_device_config()) {
    mutable_device_config()->::google::assistant::embedded::v1alpha2::DeviceConfig::MergeFrom(from.device_config());
  }
  if (from.has_debug_config()) {
    mutable_debug_config()->::google::assistant::embedded::v1alpha2::DebugConfig::MergeFrom(from.debug_config());
  }
  if (from.has_screen_out_config()) {
    mutable_screen_out_config()->::google::assistant::embedded::v1alpha2::ScreenOutConfig::MergeFrom(from.screen_out_config());
  }
  switch (from.type_case()) {
    case kAudioInConfig: {
      mutable_audio_in_config()->::google::assistant::embedded::v1alpha2::AudioInConfig::MergeFrom(from.audio_in_config());
      break;
    }
    case kTextQuery: {
      set_text_query(from.text_query());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void AssistConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.AssistConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssistConfig::CopyFrom(const AssistConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.AssistConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssistConfig::IsInitialized() const {
  return true;
}

void AssistConfig::Swap(AssistConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssistConfig::InternalSwap(AssistConfig* other) {
  using std::swap;
  swap(audio_out_config_, other->audio_out_config_);
  swap(dialog_state_in_, other->dialog_state_in_);
  swap(device_config_, other->device_config_);
  swap(debug_config_, other->debug_config_);
  swap(screen_out_config_, other->screen_out_config_);
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AssistConfig::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AudioInConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AudioInConfig::kEncodingFieldNumber;
const int AudioInConfig::kSampleRateHertzFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AudioInConfig::AudioInConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AudioInConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.AudioInConfig)
}
AudioInConfig::AudioInConfig(const AudioInConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&encoding_, &from.encoding_,
    static_cast<size_t>(reinterpret_cast<char*>(&sample_rate_hertz_) -
    reinterpret_cast<char*>(&encoding_)) + sizeof(sample_rate_hertz_));
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.AudioInConfig)
}

void AudioInConfig::SharedCtor() {
  ::memset(&encoding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sample_rate_hertz_) -
      reinterpret_cast<char*>(&encoding_)) + sizeof(sample_rate_hertz_));
}

AudioInConfig::~AudioInConfig() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.AudioInConfig)
  SharedDtor();
}

void AudioInConfig::SharedDtor() {
}

void AudioInConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AudioInConfig::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AudioInConfig& AudioInConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AudioInConfig.base);
  return *internal_default_instance();
}


void AudioInConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.AudioInConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&encoding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sample_rate_hertz_) -
      reinterpret_cast<char*>(&encoding_)) + sizeof(sample_rate_hertz_));
  _internal_metadata_.Clear();
}

bool AudioInConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.AudioInConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.assistant.embedded.v1alpha2.AudioInConfig.Encoding encoding = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encoding(static_cast< ::google::assistant::embedded::v1alpha2::AudioInConfig_Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sample_rate_hertz = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sample_rate_hertz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.AudioInConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.AudioInConfig)
  return false;
#undef DO_
}

void AudioInConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.AudioInConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.AudioInConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->encoding(), output);
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sample_rate_hertz(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.AudioInConfig)
}

::google::protobuf::uint8* AudioInConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.AudioInConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.AudioInConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->encoding(), target);
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sample_rate_hertz(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.AudioInConfig)
  return target;
}

size_t AudioInConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.AudioInConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.assistant.embedded.v1alpha2.AudioInConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encoding());
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sample_rate_hertz());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AudioInConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.AudioInConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioInConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AudioInConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.AudioInConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.AudioInConfig)
    MergeFrom(*source);
  }
}

void AudioInConfig::MergeFrom(const AudioInConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.AudioInConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.encoding() != 0) {
    set_encoding(from.encoding());
  }
  if (from.sample_rate_hertz() != 0) {
    set_sample_rate_hertz(from.sample_rate_hertz());
  }
}

void AudioInConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.AudioInConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioInConfig::CopyFrom(const AudioInConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.AudioInConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioInConfig::IsInitialized() const {
  return true;
}

void AudioInConfig::Swap(AudioInConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AudioInConfig::InternalSwap(AudioInConfig* other) {
  using std::swap;
  swap(encoding_, other->encoding_);
  swap(sample_rate_hertz_, other->sample_rate_hertz_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AudioInConfig::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AudioOutConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AudioOutConfig::kEncodingFieldNumber;
const int AudioOutConfig::kSampleRateHertzFieldNumber;
const int AudioOutConfig::kVolumePercentageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AudioOutConfig::AudioOutConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AudioOutConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.AudioOutConfig)
}
AudioOutConfig::AudioOutConfig(const AudioOutConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&encoding_, &from.encoding_,
    static_cast<size_t>(reinterpret_cast<char*>(&volume_percentage_) -
    reinterpret_cast<char*>(&encoding_)) + sizeof(volume_percentage_));
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.AudioOutConfig)
}

void AudioOutConfig::SharedCtor() {
  ::memset(&encoding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volume_percentage_) -
      reinterpret_cast<char*>(&encoding_)) + sizeof(volume_percentage_));
}

AudioOutConfig::~AudioOutConfig() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.AudioOutConfig)
  SharedDtor();
}

void AudioOutConfig::SharedDtor() {
}

void AudioOutConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AudioOutConfig::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AudioOutConfig& AudioOutConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AudioOutConfig.base);
  return *internal_default_instance();
}


void AudioOutConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.AudioOutConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&encoding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volume_percentage_) -
      reinterpret_cast<char*>(&encoding_)) + sizeof(volume_percentage_));
  _internal_metadata_.Clear();
}

bool AudioOutConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.AudioOutConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.assistant.embedded.v1alpha2.AudioOutConfig.Encoding encoding = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encoding(static_cast< ::google::assistant::embedded::v1alpha2::AudioOutConfig_Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sample_rate_hertz = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sample_rate_hertz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 volume_percentage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_percentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.AudioOutConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.AudioOutConfig)
  return false;
#undef DO_
}

void AudioOutConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.AudioOutConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.AudioOutConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->encoding(), output);
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sample_rate_hertz(), output);
  }

  // int32 volume_percentage = 3;
  if (this->volume_percentage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->volume_percentage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.AudioOutConfig)
}

::google::protobuf::uint8* AudioOutConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.AudioOutConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.AudioOutConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->encoding(), target);
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sample_rate_hertz(), target);
  }

  // int32 volume_percentage = 3;
  if (this->volume_percentage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->volume_percentage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.AudioOutConfig)
  return target;
}

size_t AudioOutConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.AudioOutConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.assistant.embedded.v1alpha2.AudioOutConfig.Encoding encoding = 1;
  if (this->encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encoding());
  }

  // int32 sample_rate_hertz = 2;
  if (this->sample_rate_hertz() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sample_rate_hertz());
  }

  // int32 volume_percentage = 3;
  if (this->volume_percentage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume_percentage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AudioOutConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.AudioOutConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioOutConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AudioOutConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.AudioOutConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.AudioOutConfig)
    MergeFrom(*source);
  }
}

void AudioOutConfig::MergeFrom(const AudioOutConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.AudioOutConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.encoding() != 0) {
    set_encoding(from.encoding());
  }
  if (from.sample_rate_hertz() != 0) {
    set_sample_rate_hertz(from.sample_rate_hertz());
  }
  if (from.volume_percentage() != 0) {
    set_volume_percentage(from.volume_percentage());
  }
}

void AudioOutConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.AudioOutConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioOutConfig::CopyFrom(const AudioOutConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.AudioOutConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioOutConfig::IsInitialized() const {
  return true;
}

void AudioOutConfig::Swap(AudioOutConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AudioOutConfig::InternalSwap(AudioOutConfig* other) {
  using std::swap;
  swap(encoding_, other->encoding_);
  swap(sample_rate_hertz_, other->sample_rate_hertz_);
  swap(volume_percentage_, other->volume_percentage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AudioOutConfig::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScreenOutConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScreenOutConfig::kScreenModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScreenOutConfig::ScreenOutConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_ScreenOutConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.ScreenOutConfig)
}
ScreenOutConfig::ScreenOutConfig(const ScreenOutConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  screen_mode_ = from.screen_mode_;
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.ScreenOutConfig)
}

void ScreenOutConfig::SharedCtor() {
  screen_mode_ = 0;
}

ScreenOutConfig::~ScreenOutConfig() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  SharedDtor();
}

void ScreenOutConfig::SharedDtor() {
}

void ScreenOutConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScreenOutConfig::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScreenOutConfig& ScreenOutConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_ScreenOutConfig.base);
  return *internal_default_instance();
}


void ScreenOutConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  screen_mode_ = 0;
  _internal_metadata_.Clear();
}

bool ScreenOutConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode screen_mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_screen_mode(static_cast< ::google::assistant::embedded::v1alpha2::ScreenOutConfig_ScreenMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  return false;
#undef DO_
}

void ScreenOutConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode screen_mode = 1;
  if (this->screen_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->screen_mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.ScreenOutConfig)
}

::google::protobuf::uint8* ScreenOutConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode screen_mode = 1;
  if (this->screen_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->screen_mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  return target;
}

size_t ScreenOutConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode screen_mode = 1;
  if (this->screen_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->screen_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScreenOutConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ScreenOutConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScreenOutConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.ScreenOutConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.ScreenOutConfig)
    MergeFrom(*source);
  }
}

void ScreenOutConfig::MergeFrom(const ScreenOutConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.screen_mode() != 0) {
    set_screen_mode(from.screen_mode());
  }
}

void ScreenOutConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScreenOutConfig::CopyFrom(const ScreenOutConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScreenOutConfig::IsInitialized() const {
  return true;
}

void ScreenOutConfig::Swap(ScreenOutConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScreenOutConfig::InternalSwap(ScreenOutConfig* other) {
  using std::swap;
  swap(screen_mode_, other->screen_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScreenOutConfig::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DialogStateIn::InitAsDefaultInstance() {
  ::google::assistant::embedded::v1alpha2::_DialogStateIn_default_instance_._instance.get_mutable()->device_location_ = const_cast< ::google::assistant::embedded::v1alpha2::DeviceLocation*>(
      ::google::assistant::embedded::v1alpha2::DeviceLocation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DialogStateIn::kConversationStateFieldNumber;
const int DialogStateIn::kLanguageCodeFieldNumber;
const int DialogStateIn::kDeviceLocationFieldNumber;
const int DialogStateIn::kIsNewConversationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DialogStateIn::DialogStateIn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DialogStateIn.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.DialogStateIn)
}
DialogStateIn::DialogStateIn(const DialogStateIn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  conversation_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.conversation_state().size() > 0) {
    conversation_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_state_);
  }
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language_code().size() > 0) {
    language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code_);
  }
  if (from.has_device_location()) {
    device_location_ = new ::google::assistant::embedded::v1alpha2::DeviceLocation(*from.device_location_);
  } else {
    device_location_ = NULL;
  }
  is_new_conversation_ = from.is_new_conversation_;
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.DialogStateIn)
}

void DialogStateIn::SharedCtor() {
  conversation_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_new_conversation_) -
      reinterpret_cast<char*>(&device_location_)) + sizeof(is_new_conversation_));
}

DialogStateIn::~DialogStateIn() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.DialogStateIn)
  SharedDtor();
}

void DialogStateIn::SharedDtor() {
  conversation_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete device_location_;
}

void DialogStateIn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DialogStateIn::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DialogStateIn& DialogStateIn::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DialogStateIn.base);
  return *internal_default_instance();
}


void DialogStateIn::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.DialogStateIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conversation_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && device_location_ != NULL) {
    delete device_location_;
  }
  device_location_ = NULL;
  is_new_conversation_ = false;
  _internal_metadata_.Clear();
}

bool DialogStateIn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.DialogStateIn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes conversation_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_conversation_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language_code().data(), static_cast<int>(this->language_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.assistant.embedded.v1alpha2.DialogStateIn.language_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha2.DeviceLocation device_location = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_new_conversation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_new_conversation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.DialogStateIn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.DialogStateIn)
  return false;
#undef DO_
}

void DialogStateIn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.DialogStateIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes conversation_state = 1;
  if (this->conversation_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->conversation_state(), output);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.DialogStateIn.language_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->language_code(), output);
  }

  // .google.assistant.embedded.v1alpha2.DeviceLocation device_location = 5;
  if (this->has_device_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_device_location(), output);
  }

  // bool is_new_conversation = 7;
  if (this->is_new_conversation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_new_conversation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.DialogStateIn)
}

::google::protobuf::uint8* DialogStateIn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.DialogStateIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes conversation_state = 1;
  if (this->conversation_state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->conversation_state(), target);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language_code().data(), static_cast<int>(this->language_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.DialogStateIn.language_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->language_code(), target);
  }

  // .google.assistant.embedded.v1alpha2.DeviceLocation device_location = 5;
  if (this->has_device_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_device_location(), deterministic, target);
  }

  // bool is_new_conversation = 7;
  if (this->is_new_conversation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_new_conversation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.DialogStateIn)
  return target;
}

size_t DialogStateIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.DialogStateIn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes conversation_state = 1;
  if (this->conversation_state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->conversation_state());
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language_code());
  }

  // .google.assistant.embedded.v1alpha2.DeviceLocation device_location = 5;
  if (this->has_device_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_location_);
  }

  // bool is_new_conversation = 7;
  if (this->is_new_conversation() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DialogStateIn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.DialogStateIn)
  GOOGLE_DCHECK_NE(&from, this);
  const DialogStateIn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DialogStateIn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.DialogStateIn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.DialogStateIn)
    MergeFrom(*source);
  }
}

void DialogStateIn::MergeFrom(const DialogStateIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.DialogStateIn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.conversation_state().size() > 0) {

    conversation_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_state_);
  }
  if (from.language_code().size() > 0) {

    language_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_code_);
  }
  if (from.has_device_location()) {
    mutable_device_location()->::google::assistant::embedded::v1alpha2::DeviceLocation::MergeFrom(from.device_location());
  }
  if (from.is_new_conversation() != 0) {
    set_is_new_conversation(from.is_new_conversation());
  }
}

void DialogStateIn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.DialogStateIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DialogStateIn::CopyFrom(const DialogStateIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.DialogStateIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DialogStateIn::IsInitialized() const {
  return true;
}

void DialogStateIn::Swap(DialogStateIn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DialogStateIn::InternalSwap(DialogStateIn* other) {
  using std::swap;
  conversation_state_.Swap(&other->conversation_state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  language_code_.Swap(&other->language_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(device_location_, other->device_location_);
  swap(is_new_conversation_, other->is_new_conversation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DialogStateIn::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceConfig::kDeviceIdFieldNumber;
const int DeviceConfig::kDeviceModelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceConfig::DeviceConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DeviceConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.DeviceConfig)
}
DeviceConfig::DeviceConfig(const DeviceConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_id().size() > 0) {
    device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
  device_model_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_model_id().size() > 0) {
    device_model_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_model_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.DeviceConfig)
}

void DeviceConfig::SharedCtor() {
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeviceConfig::~DeviceConfig() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.DeviceConfig)
  SharedDtor();
}

void DeviceConfig::SharedDtor() {
  device_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceConfig::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceConfig& DeviceConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DeviceConfig.base);
  return *internal_default_instance();
}


void DeviceConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.DeviceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeviceConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.DeviceConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string device_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_id().data(), static_cast<int>(this->device_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.assistant.embedded.v1alpha2.DeviceConfig.device_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device_model_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_model_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_model_id().data(), static_cast<int>(this->device_model_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.assistant.embedded.v1alpha2.DeviceConfig.device_model_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.DeviceConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.DeviceConfig)
  return false;
#undef DO_
}

void DeviceConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.DeviceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string device_id = 1;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), static_cast<int>(this->device_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.DeviceConfig.device_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->device_id(), output);
  }

  // string device_model_id = 3;
  if (this->device_model_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_model_id().data(), static_cast<int>(this->device_model_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.DeviceConfig.device_model_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->device_model_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.DeviceConfig)
}

::google::protobuf::uint8* DeviceConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.DeviceConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string device_id = 1;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), static_cast<int>(this->device_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.DeviceConfig.device_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->device_id(), target);
  }

  // string device_model_id = 3;
  if (this->device_model_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_model_id().data(), static_cast<int>(this->device_model_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.DeviceConfig.device_model_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->device_model_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.DeviceConfig)
  return target;
}

size_t DeviceConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.DeviceConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string device_id = 1;
  if (this->device_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_id());
  }

  // string device_model_id = 3;
  if (this->device_model_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_model_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.DeviceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.DeviceConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.DeviceConfig)
    MergeFrom(*source);
  }
}

void DeviceConfig::MergeFrom(const DeviceConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.DeviceConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device_id().size() > 0) {

    device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
  if (from.device_model_id().size() > 0) {

    device_model_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_model_id_);
  }
}

void DeviceConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.DeviceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceConfig::CopyFrom(const DeviceConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.DeviceConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceConfig::IsInitialized() const {
  return true;
}

void DeviceConfig::Swap(DeviceConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceConfig::InternalSwap(DeviceConfig* other) {
  using std::swap;
  device_id_.Swap(&other->device_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_model_id_.Swap(&other->device_model_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceConfig::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AudioOut::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AudioOut::kAudioDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AudioOut::AudioOut()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AudioOut.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.AudioOut)
}
AudioOut::AudioOut(const AudioOut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  audio_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audio_data().size() > 0) {
    audio_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_data_);
  }
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.AudioOut)
}

void AudioOut::SharedCtor() {
  audio_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AudioOut::~AudioOut() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.AudioOut)
  SharedDtor();
}

void AudioOut::SharedDtor() {
  audio_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AudioOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AudioOut::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AudioOut& AudioOut::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_AudioOut.base);
  return *internal_default_instance();
}


void AudioOut::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.AudioOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audio_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AudioOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.AudioOut)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes audio_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_audio_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.AudioOut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.AudioOut)
  return false;
#undef DO_
}

void AudioOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.AudioOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes audio_data = 1;
  if (this->audio_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->audio_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.AudioOut)
}

::google::protobuf::uint8* AudioOut::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.AudioOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes audio_data = 1;
  if (this->audio_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->audio_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.AudioOut)
  return target;
}

size_t AudioOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.AudioOut)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes audio_data = 1;
  if (this->audio_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->audio_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AudioOut::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.AudioOut)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioOut* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AudioOut>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.AudioOut)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.AudioOut)
    MergeFrom(*source);
  }
}

void AudioOut::MergeFrom(const AudioOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.AudioOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audio_data().size() > 0) {

    audio_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_data_);
  }
}

void AudioOut::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.AudioOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioOut::CopyFrom(const AudioOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.AudioOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioOut::IsInitialized() const {
  return true;
}

void AudioOut::Swap(AudioOut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AudioOut::InternalSwap(AudioOut* other) {
  using std::swap;
  audio_data_.Swap(&other->audio_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AudioOut::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScreenOut::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScreenOut::kFormatFieldNumber;
const int ScreenOut::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScreenOut::ScreenOut()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_ScreenOut.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.ScreenOut)
}
ScreenOut::ScreenOut(const ScreenOut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  format_ = from.format_;
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.ScreenOut)
}

void ScreenOut::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_ = 0;
}

ScreenOut::~ScreenOut() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.ScreenOut)
  SharedDtor();
}

void ScreenOut::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScreenOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScreenOut::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScreenOut& ScreenOut::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_ScreenOut.base);
  return *internal_default_instance();
}


void ScreenOut::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.ScreenOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_ = 0;
  _internal_metadata_.Clear();
}

bool ScreenOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.ScreenOut)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.assistant.embedded.v1alpha2.ScreenOut.Format format = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_format(static_cast< ::google::assistant::embedded::v1alpha2::ScreenOut_Format >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.ScreenOut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.ScreenOut)
  return false;
#undef DO_
}

void ScreenOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.ScreenOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.ScreenOut.Format format = 1;
  if (this->format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->format(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.ScreenOut)
}

::google::protobuf::uint8* ScreenOut::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.ScreenOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.assistant.embedded.v1alpha2.ScreenOut.Format format = 1;
  if (this->format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->format(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.ScreenOut)
  return target;
}

size_t ScreenOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.ScreenOut)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .google.assistant.embedded.v1alpha2.ScreenOut.Format format = 1;
  if (this->format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->format());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScreenOut::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.ScreenOut)
  GOOGLE_DCHECK_NE(&from, this);
  const ScreenOut* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScreenOut>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.ScreenOut)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.ScreenOut)
    MergeFrom(*source);
  }
}

void ScreenOut::MergeFrom(const ScreenOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.ScreenOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.format() != 0) {
    set_format(from.format());
  }
}

void ScreenOut::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.ScreenOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScreenOut::CopyFrom(const ScreenOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.ScreenOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScreenOut::IsInitialized() const {
  return true;
}

void ScreenOut::Swap(ScreenOut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScreenOut::InternalSwap(ScreenOut* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(format_, other->format_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScreenOut::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceAction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceAction::kDeviceRequestJsonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceAction::DeviceAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DeviceAction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.DeviceAction)
}
DeviceAction::DeviceAction(const DeviceAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_request_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_request_json().size() > 0) {
    device_request_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_request_json_);
  }
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.DeviceAction)
}

void DeviceAction::SharedCtor() {
  device_request_json_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DeviceAction::~DeviceAction() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.DeviceAction)
  SharedDtor();
}

void DeviceAction::SharedDtor() {
  device_request_json_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceAction::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceAction& DeviceAction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DeviceAction.base);
  return *internal_default_instance();
}


void DeviceAction::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.DeviceAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_request_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeviceAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.DeviceAction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string device_request_json = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_request_json()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_request_json().data(), static_cast<int>(this->device_request_json().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.assistant.embedded.v1alpha2.DeviceAction.device_request_json"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.DeviceAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.DeviceAction)
  return false;
#undef DO_
}

void DeviceAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.DeviceAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string device_request_json = 1;
  if (this->device_request_json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_request_json().data(), static_cast<int>(this->device_request_json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.DeviceAction.device_request_json");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->device_request_json(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.DeviceAction)
}

::google::protobuf::uint8* DeviceAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.DeviceAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string device_request_json = 1;
  if (this->device_request_json().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_request_json().data(), static_cast<int>(this->device_request_json().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.DeviceAction.device_request_json");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->device_request_json(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.DeviceAction)
  return target;
}

size_t DeviceAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.DeviceAction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string device_request_json = 1;
  if (this->device_request_json().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_request_json());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.DeviceAction)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.DeviceAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.DeviceAction)
    MergeFrom(*source);
  }
}

void DeviceAction::MergeFrom(const DeviceAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.DeviceAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device_request_json().size() > 0) {

    device_request_json_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_request_json_);
  }
}

void DeviceAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.DeviceAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceAction::CopyFrom(const DeviceAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.DeviceAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceAction::IsInitialized() const {
  return true;
}

void DeviceAction::Swap(DeviceAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceAction::InternalSwap(DeviceAction* other) {
  using std::swap;
  device_request_json_.Swap(&other->device_request_json_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceAction::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SpeechRecognitionResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpeechRecognitionResult::kTranscriptFieldNumber;
const int SpeechRecognitionResult::kStabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpeechRecognitionResult::SpeechRecognitionResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_SpeechRecognitionResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
}
SpeechRecognitionResult::SpeechRecognitionResult(const SpeechRecognitionResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transcript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transcript().size() > 0) {
    transcript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transcript_);
  }
  stability_ = from.stability_;
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
}

void SpeechRecognitionResult::SharedCtor() {
  transcript_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stability_ = 0;
}

SpeechRecognitionResult::~SpeechRecognitionResult() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
  SharedDtor();
}

void SpeechRecognitionResult::SharedDtor() {
  transcript_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SpeechRecognitionResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SpeechRecognitionResult::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SpeechRecognitionResult& SpeechRecognitionResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_SpeechRecognitionResult.base);
  return *internal_default_instance();
}


void SpeechRecognitionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transcript_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stability_ = 0;
  _internal_metadata_.Clear();
}

bool SpeechRecognitionResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string transcript = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transcript()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transcript().data(), static_cast<int>(this->transcript().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.assistant.embedded.v1alpha2.SpeechRecognitionResult.transcript"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float stability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &stability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
  return false;
#undef DO_
}

void SpeechRecognitionResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transcript = 1;
  if (this->transcript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transcript().data(), static_cast<int>(this->transcript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.SpeechRecognitionResult.transcript");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->transcript(), output);
  }

  // float stability = 2;
  if (this->stability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->stability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
}

::google::protobuf::uint8* SpeechRecognitionResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transcript = 1;
  if (this->transcript().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transcript().data(), static_cast<int>(this->transcript().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.SpeechRecognitionResult.transcript");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->transcript(), target);
  }

  // float stability = 2;
  if (this->stability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->stability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
  return target;
}

size_t SpeechRecognitionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string transcript = 1;
  if (this->transcript().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transcript());
  }

  // float stability = 2;
  if (this->stability() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpeechRecognitionResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const SpeechRecognitionResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpeechRecognitionResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
    MergeFrom(*source);
  }
}

void SpeechRecognitionResult::MergeFrom(const SpeechRecognitionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transcript().size() > 0) {

    transcript_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transcript_);
  }
  if (from.stability() != 0) {
    set_stability(from.stability());
  }
}

void SpeechRecognitionResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeechRecognitionResult::CopyFrom(const SpeechRecognitionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.SpeechRecognitionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeechRecognitionResult::IsInitialized() const {
  return true;
}

void SpeechRecognitionResult::Swap(SpeechRecognitionResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpeechRecognitionResult::InternalSwap(SpeechRecognitionResult* other) {
  using std::swap;
  transcript_.Swap(&other->transcript_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(stability_, other->stability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SpeechRecognitionResult::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DialogStateOut::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DialogStateOut::kSupplementalDisplayTextFieldNumber;
const int DialogStateOut::kConversationStateFieldNumber;
const int DialogStateOut::kMicrophoneModeFieldNumber;
const int DialogStateOut::kVolumePercentageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DialogStateOut::DialogStateOut()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DialogStateOut.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.DialogStateOut)
}
DialogStateOut::DialogStateOut(const DialogStateOut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  supplemental_display_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.supplemental_display_text().size() > 0) {
    supplemental_display_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.supplemental_display_text_);
  }
  conversation_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.conversation_state().size() > 0) {
    conversation_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_state_);
  }
  ::memcpy(&microphone_mode_, &from.microphone_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&volume_percentage_) -
    reinterpret_cast<char*>(&microphone_mode_)) + sizeof(volume_percentage_));
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.DialogStateOut)
}

void DialogStateOut::SharedCtor() {
  supplemental_display_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conversation_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&microphone_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volume_percentage_) -
      reinterpret_cast<char*>(&microphone_mode_)) + sizeof(volume_percentage_));
}

DialogStateOut::~DialogStateOut() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.DialogStateOut)
  SharedDtor();
}

void DialogStateOut::SharedDtor() {
  supplemental_display_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conversation_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DialogStateOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DialogStateOut::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DialogStateOut& DialogStateOut::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DialogStateOut.base);
  return *internal_default_instance();
}


void DialogStateOut::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.DialogStateOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  supplemental_display_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conversation_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&microphone_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volume_percentage_) -
      reinterpret_cast<char*>(&microphone_mode_)) + sizeof(volume_percentage_));
  _internal_metadata_.Clear();
}

bool DialogStateOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.DialogStateOut)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string supplemental_display_text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_supplemental_display_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->supplemental_display_text().data(), static_cast<int>(this->supplemental_display_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.assistant.embedded.v1alpha2.DialogStateOut.supplemental_display_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes conversation_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_conversation_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.assistant.embedded.v1alpha2.DialogStateOut.MicrophoneMode microphone_mode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_microphone_mode(static_cast< ::google::assistant::embedded::v1alpha2::DialogStateOut_MicrophoneMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 volume_percentage = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_percentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.DialogStateOut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.DialogStateOut)
  return false;
#undef DO_
}

void DialogStateOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.DialogStateOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string supplemental_display_text = 1;
  if (this->supplemental_display_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->supplemental_display_text().data(), static_cast<int>(this->supplemental_display_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.DialogStateOut.supplemental_display_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->supplemental_display_text(), output);
  }

  // bytes conversation_state = 2;
  if (this->conversation_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->conversation_state(), output);
  }

  // .google.assistant.embedded.v1alpha2.DialogStateOut.MicrophoneMode microphone_mode = 3;
  if (this->microphone_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->microphone_mode(), output);
  }

  // int32 volume_percentage = 4;
  if (this->volume_percentage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->volume_percentage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.DialogStateOut)
}

::google::protobuf::uint8* DialogStateOut::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.DialogStateOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string supplemental_display_text = 1;
  if (this->supplemental_display_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->supplemental_display_text().data(), static_cast<int>(this->supplemental_display_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.assistant.embedded.v1alpha2.DialogStateOut.supplemental_display_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->supplemental_display_text(), target);
  }

  // bytes conversation_state = 2;
  if (this->conversation_state().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->conversation_state(), target);
  }

  // .google.assistant.embedded.v1alpha2.DialogStateOut.MicrophoneMode microphone_mode = 3;
  if (this->microphone_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->microphone_mode(), target);
  }

  // int32 volume_percentage = 4;
  if (this->volume_percentage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->volume_percentage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.DialogStateOut)
  return target;
}

size_t DialogStateOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.DialogStateOut)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string supplemental_display_text = 1;
  if (this->supplemental_display_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->supplemental_display_text());
  }

  // bytes conversation_state = 2;
  if (this->conversation_state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->conversation_state());
  }

  // .google.assistant.embedded.v1alpha2.DialogStateOut.MicrophoneMode microphone_mode = 3;
  if (this->microphone_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->microphone_mode());
  }

  // int32 volume_percentage = 4;
  if (this->volume_percentage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volume_percentage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DialogStateOut::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.DialogStateOut)
  GOOGLE_DCHECK_NE(&from, this);
  const DialogStateOut* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DialogStateOut>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.DialogStateOut)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.DialogStateOut)
    MergeFrom(*source);
  }
}

void DialogStateOut::MergeFrom(const DialogStateOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.DialogStateOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.supplemental_display_text().size() > 0) {

    supplemental_display_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.supplemental_display_text_);
  }
  if (from.conversation_state().size() > 0) {

    conversation_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conversation_state_);
  }
  if (from.microphone_mode() != 0) {
    set_microphone_mode(from.microphone_mode());
  }
  if (from.volume_percentage() != 0) {
    set_volume_percentage(from.volume_percentage());
  }
}

void DialogStateOut::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.DialogStateOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DialogStateOut::CopyFrom(const DialogStateOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.DialogStateOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DialogStateOut::IsInitialized() const {
  return true;
}

void DialogStateOut::Swap(DialogStateOut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DialogStateOut::InternalSwap(DialogStateOut* other) {
  using std::swap;
  supplemental_display_text_.Swap(&other->supplemental_display_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  conversation_state_.Swap(&other->conversation_state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(microphone_mode_, other->microphone_mode_);
  swap(volume_percentage_, other->volume_percentage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DialogStateOut::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DebugConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugConfig::kReturnDebugInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugConfig::DebugConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DebugConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.DebugConfig)
}
DebugConfig::DebugConfig(const DebugConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  return_debug_info_ = from.return_debug_info_;
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.DebugConfig)
}

void DebugConfig::SharedCtor() {
  return_debug_info_ = false;
}

DebugConfig::~DebugConfig() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.DebugConfig)
  SharedDtor();
}

void DebugConfig::SharedDtor() {
}

void DebugConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DebugConfig::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebugConfig& DebugConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DebugConfig.base);
  return *internal_default_instance();
}


void DebugConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.DebugConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return_debug_info_ = false;
  _internal_metadata_.Clear();
}

bool DebugConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.DebugConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool return_debug_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &return_debug_info_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.DebugConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.DebugConfig)
  return false;
#undef DO_
}

void DebugConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.DebugConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_debug_info = 6;
  if (this->return_debug_info() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->return_debug_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.DebugConfig)
}

::google::protobuf::uint8* DebugConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.DebugConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool return_debug_info = 6;
  if (this->return_debug_info() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->return_debug_info(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.DebugConfig)
  return target;
}

size_t DebugConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.DebugConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool return_debug_info = 6;
  if (this->return_debug_info() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DebugConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.DebugConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.DebugConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.DebugConfig)
    MergeFrom(*source);
  }
}

void DebugConfig::MergeFrom(const DebugConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.DebugConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.return_debug_info() != 0) {
    set_return_debug_info(from.return_debug_info());
  }
}

void DebugConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.DebugConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugConfig::CopyFrom(const DebugConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.DebugConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugConfig::IsInitialized() const {
  return true;
}

void DebugConfig::Swap(DebugConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugConfig::InternalSwap(DebugConfig* other) {
  using std::swap;
  swap(return_debug_info_, other->return_debug_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DebugConfig::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceLocation::InitAsDefaultInstance() {
  ::google::assistant::embedded::v1alpha2::_DeviceLocation_default_instance_.coordinates_ = const_cast< ::google::type::LatLng*>(
      ::google::type::LatLng::internal_default_instance());
}
void DeviceLocation::set_allocated_coordinates(::google::type::LatLng* coordinates) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (coordinates) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coordinates = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coordinates, submessage_arena);
    }
    set_has_coordinates();
    type_.coordinates_ = coordinates;
  }
  // @@protoc_insertion_point(field_set_allocated:google.assistant.embedded.v1alpha2.DeviceLocation.coordinates)
}
void DeviceLocation::clear_coordinates() {
  if (has_coordinates()) {
    delete type_.coordinates_;
    clear_has_type();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceLocation::kCoordinatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceLocation::DeviceLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DeviceLocation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.assistant.embedded.v1alpha2.DeviceLocation)
}
DeviceLocation::DeviceLocation(const DeviceLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kCoordinates: {
      mutable_coordinates()->::google::type::LatLng::MergeFrom(from.coordinates());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.assistant.embedded.v1alpha2.DeviceLocation)
}

void DeviceLocation::SharedCtor() {
  clear_has_type();
}

DeviceLocation::~DeviceLocation() {
  // @@protoc_insertion_point(destructor:google.assistant.embedded.v1alpha2.DeviceLocation)
  SharedDtor();
}

void DeviceLocation::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void DeviceLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceLocation::descriptor() {
  ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceLocation& DeviceLocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::scc_info_DeviceLocation.base);
  return *internal_default_instance();
}


void DeviceLocation::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:google.assistant.embedded.v1alpha2.DeviceLocation)
  switch (type_case()) {
    case kCoordinates: {
      delete type_.coordinates_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void DeviceLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.assistant.embedded.v1alpha2.DeviceLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

bool DeviceLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.assistant.embedded.v1alpha2.DeviceLocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.type.LatLng coordinates = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coordinates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.assistant.embedded.v1alpha2.DeviceLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.assistant.embedded.v1alpha2.DeviceLocation)
  return false;
#undef DO_
}

void DeviceLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.assistant.embedded.v1alpha2.DeviceLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.type.LatLng coordinates = 1;
  if (has_coordinates()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_coordinates(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.assistant.embedded.v1alpha2.DeviceLocation)
}

::google::protobuf::uint8* DeviceLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.assistant.embedded.v1alpha2.DeviceLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.type.LatLng coordinates = 1;
  if (has_coordinates()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_coordinates(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.assistant.embedded.v1alpha2.DeviceLocation)
  return target;
}

size_t DeviceLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.assistant.embedded.v1alpha2.DeviceLocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_case()) {
    // .google.type.LatLng coordinates = 1;
    case kCoordinates: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.coordinates_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.assistant.embedded.v1alpha2.DeviceLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.assistant.embedded.v1alpha2.DeviceLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.assistant.embedded.v1alpha2.DeviceLocation)
    MergeFrom(*source);
  }
}

void DeviceLocation::MergeFrom(const DeviceLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.assistant.embedded.v1alpha2.DeviceLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kCoordinates: {
      mutable_coordinates()->::google::type::LatLng::MergeFrom(from.coordinates());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void DeviceLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.assistant.embedded.v1alpha2.DeviceLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceLocation::CopyFrom(const DeviceLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.assistant.embedded.v1alpha2.DeviceLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceLocation::IsInitialized() const {
  return true;
}

void DeviceLocation::Swap(DeviceLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceLocation::InternalSwap(DeviceLocation* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceLocation::GetMetadata() const {
  protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fassistant_2fembedded_2fv1alpha2_2fembedded_5fassistant_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha2
}  // namespace embedded
}  // namespace assistant
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::AssistRequest* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::AssistRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::AssistRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::AssistResponse* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::AssistResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::AssistResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::DebugInfo* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::DebugInfo >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::DebugInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::AssistConfig* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::AssistConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::AssistConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::AudioInConfig* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::AudioInConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::AudioInConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::AudioOutConfig* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::AudioOutConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::AudioOutConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::ScreenOutConfig* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::ScreenOutConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::ScreenOutConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::DialogStateIn* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::DialogStateIn >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::DialogStateIn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::DeviceConfig* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::DeviceConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::DeviceConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::AudioOut* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::AudioOut >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::AudioOut >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::ScreenOut* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::ScreenOut >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::ScreenOut >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::DeviceAction* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::DeviceAction >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::DeviceAction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::SpeechRecognitionResult* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::SpeechRecognitionResult >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::SpeechRecognitionResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::DialogStateOut* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::DialogStateOut >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::DialogStateOut >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::DebugConfig* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::DebugConfig >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::DebugConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::assistant::embedded::v1alpha2::DeviceLocation* Arena::CreateMaybeMessage< ::google::assistant::embedded::v1alpha2::DeviceLocation >(Arena* arena) {
  return Arena::CreateInternal< ::google::assistant::embedded::v1alpha2::DeviceLocation >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
